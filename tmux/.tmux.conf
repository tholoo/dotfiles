if-shell '[ -n "$WSL_DISTRO_NAME" ] && command -v powershell.exe >/dev/null 2>&1' {
  set -g @override_copy_command \
  'customclip(){ local STDIN=$(cat -); powershell.exe -command "Set-Clipboard" -Value "$STDIN"; }; customclip'
}

# set-option -g default-terminal 'screen-256color'
# set-option -g default-terminal 'tmux-256color'
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# set-option -g terminal-overrides ',xterm-256color:RGB'
set-option -g default-shell /bin/fish

# bind t to terminal
unbind t
unbind T
bind T switchc -t 'terminal'

bind | split-window -h # vertical split
bind - split-window -v # horizontal split

bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5
bind -r h resize-pane -L 5
bind -r m resize-pane -Z # maximize/unmaximize pane

bind-key h select-pane -L # select pane on left
bind-key j select-pane -D # select pane on bottom
bind-key k select-pane -U # select pane on top
bind-key l select-pane -R # select pane on right



# Linux only
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down
bind -T copy-mode-emacs C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-emacs C-WheelDownPane send-keys -X halfpage-down

set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X select-line
bind-key -T copy-mode-vi y send -X copy-pipe 'xclip -in -selection clipboard'
# To copy, left click and drag to highlight text in yellow, 
# once you release left click yellow text will disappear and will automatically be available in clibboard
# # Use vim keybindings in copy mode
setw -g mode-keys vi
# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -selection c"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"



# Act like vim
# set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection
# unbind -T copy-mode-vi MouseDragEnd1Pane

# Mouse support
set -g mouse on


bind-key & kill-window
bind-key x kill-pane

unbind "f"
unbind "C-\\"
unbind-key C-\\

# bind-key t send-keys T

bind-key "f" run-shell -b "/home/tholo/.tmux/plugins/tmux-fzf/scripts/window.sh attach"

set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.tmux/plugins/'

set -g @t-fzf-prompt '  '
set -g base-index 1              # start indexing windows at 1 instead of 0
setw -g pane-base-index 1
set -g detach-on-destroy off     # don't exit from tmux when closing a session
set -g escape-time 0             # zero-out escape time delay
set -g history-limit 100000     # increase history size (from 2,000)
set -g renumber-windows on       # renumber all windows when any window is closed
set -g set-clipboard on          # use system clipboard
set -g status-position top       # macOS / darwin style
set -g default-terminal "${TERM}"
setw -g mouse on
setw -g mode-keys vi
set -g status-keys vi
set -g pane-active-border-style 'fg=magenta,bg=default'
set -g pane-border-style 'fg=brightblack,bg=default'
set-option -g status-position top
set-window-option -g status-position top

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind-key o set-option status

set-window-option -g automatic-rename on
set-option -g status-interval 5
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'
set-option -g automatic-rename-format "#{?#{==:#{pane_current_command},fish},#{b:pane_current_path},#{pane_current_command}}"

# for zen mode
set-option -g allow-passthrough on

set-option -g set-titles on
setw -g monitor-activity on
# set -g visual-activity on

# Set status bar
# set -g status-bg black
# set -g status-fg white

# Highlight active window
# set-window-option -g window-status-current-bg blue

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'ofirgall/tmux-window-name'
set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @plugin 'fcsonline/tmux-thumbs'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'wfxr/tmux-fzf-url'
# set -g @plugin 'catppuccin/tmux'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'omerxx/tmux-sessionx'
set -g @plugin '27medkamal/tmux-session-wizard'
# set -g @plugin 'dracula/tmux'
# set -g @plugin 'niksingh710/minimal-tmux-status'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'
# set -g @tmux_window_name_use_tilde "True"
# set -g @tmux_window_name_substitute_sets "[('.+ipython([32])', 'ipython\g<1>'), ('^(/usr)?/bin/(.+)', '\g<2>'), ('(bash) (.+)/(.+[ $])(.+)', '\g<3>\g<4>'), ('^nvim', '')]"
set -g @session-wizard 't'
set -g @session-wizard-height 80
set -g @session-wizard-width 80

set -g @sessionx-bind 'f'
set -g @sessionx-window-mode 'on'
set -g @continuum-restore 'on'
set -g @resurrect-strategy-nvim 'session'

set -g @minimal-tmux-bg "#36a3d9"
# set-option -g status-style bg="#0f1419",fg=default
# set-option -g status-style bg=default,fg=default
set-option -g status-style bg=terminal,fg=terminal
set-option -g status-justify centre
# set-option -g status-right '#[bg=default,fg=default,bold]#{?client_prefix,,  tmux  }#[bg=#{@minimal-tmux-bg},fg=black,bold]#{?client_prefix,  tmux  ,}'
set-option -g status-right '#[bg=default,fg=default,bold]#{?client_prefix,,     }#[bg=#{@minimal-tmux-bg},fg=black,bold]#{?client_prefix,     ,}'
set-option -g status-left '#S'
set-option -g window-status-format ' #I: #W '
set-option -g window-status-current-format '#[bg=#{@minimal-tmux-bg},fg=#000000] #I: #W#{?window_zoomed_flag,  , }'

# available plugins: battery, cpu-usage, git, gpu-usage, ram-usage, tmux-ram-usage, network, network-bandwidth, network-ping, ssh-session, attached-clients, network-vpn, weather, time, mpc, spotify-tui, kubernetes-context, synchronize-panes
# set -g @dracula-plugins "cpu-usage ram-usage time"
# set -g @dracula-cpu-usage-label "󰧑"
# set -g @dracula-ram-usage-label " "
# set -g @dracula-time-format "%F %R"
# # available colors: white, gray, dark_gray, light_purple, dark_purple, cyan, green, orange, red, pink, yellow
# # set -g @dracula-[plugin-name]-colors "[background] [foreground]"
# set -g @dracula-cpu-usage-colors "dark_gray white"
# set -g @dracula-ram-usage-colors "dark_gray white"
# # set -g @dracula-show-left-sep 
# set -g @dracula-show-empty-plugins false
# set -g @dracula-show-powerline true
# set -g @dracula-show-flags true
# set -g @dracula-show-left-icon session

# set -g @catppuccin_window_number_position "left"
# set -g @catppuccin_window_default_text "#W"
# set -g @catppuccin_icon_window_zoom ""
# set -g @catppuccin_window_current_text "#W#{?window_zoomed_flag,(),}"
# set -g @catppuccin_directory_text "#{pane_current_path}"
# set -g @catppuccin_flavour 'mocha' # or frappe, macchiato, mocha
# set -g @catppuccin_window_left_separator "█"
# set -g @catppuccin_window_right_separator "█ "
# set -g @catppuccin_window_number_position "right"
# set -g @catppuccin_window_middle_separator "  █"
# set -g @catppuccin_window_default_fill "number"
# set -g @catppuccin_window_current_fill "number"
# set -g @catppuccin_status_modules_right "application session date_time"
# set -g @catppuccin_status_left_separator  ""
# set -g @catppuccin_status_right_separator " "
# set -g @catppuccin_status_right_separator_inverse "yes"
# set -g @catppuccin_status_fill "all"
# set -g @catppuccin_status_connect_separator "no"
# set -g @catppuccin_date_time_text "%y-%m-%d %h:%m:%s"

# set -g status-bg default

unbind r
bind r source-file ~/.tmux.conf

bind -n M-C-l send-keys "C-l"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# new-session -s terminal
# if (( $+commands[tmux] )); then
#   if ! tmux has-session -t terminal 2>/dev/null; then
#     # Create a new session named 'terminal' detached (-d)
#     tmux new-session -s terminal
#   fi
# fi
